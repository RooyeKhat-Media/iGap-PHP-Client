<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Global.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.Thumbnail</code>
 */
class Thumbnail extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     */
    private $size = 0;
    /**
     * Generated from protobuf field <code>int32 width = 2;</code>
     */
    private $width = 0;
    /**
     * Generated from protobuf field <code>int32 height = 3;</code>
     */
    private $height = 0;
    /**
     * Generated from protobuf field <code>string cache_id = 4;</code>
     */
    private $cache_id = '';
    /**
     * Generated from protobuf field <code>string name = 5;</code>
     */
    private $name = '';
    /**
     * Generated from protobuf field <code>string mime = 6;</code>
     */
    private $mime = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $size
     *     @type int $width
     *     @type int $height
     *     @type string $cache_id
     *     @type string $name
     *     @type string $mime
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PBGlobal::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     * @return int|string
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 width = 2;</code>
     * @return int
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * Generated from protobuf field <code>int32 width = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 height = 3;</code>
     * @return int
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * Generated from protobuf field <code>int32 height = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string cache_id = 4;</code>
     * @return string
     */
    public function getCacheId()
    {
        return $this->cache_id;
    }

    /**
     * Generated from protobuf field <code>string cache_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheId($var)
    {
        GPBUtil::checkString($var, True);
        $this->cache_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 5;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string mime = 6;</code>
     * @return string
     */
    public function getMime()
    {
        return $this->mime;
    }

    /**
     * Generated from protobuf field <code>string mime = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setMime($var)
    {
        GPBUtil::checkString($var, True);
        $this->mime = $var;

        return $this;
    }

}

