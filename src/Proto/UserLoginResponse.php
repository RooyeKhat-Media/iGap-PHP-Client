<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: UserLogin.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.UserLoginResponse</code>
 */
class UserLoginResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     */
    private $response = null;
    /**
     * Generated from protobuf field <code>bool deprecated_client = 2;</code>
     */
    private $deprecated_client = false;
    /**
     * Generated from protobuf field <code>string secondary_node_name = 3;</code>
     */
    private $secondary_node_name = '';
    /**
     * Generated from protobuf field <code>bool update_available = 4;</code>
     */
    private $update_available = false;
    /**
     * Generated from protobuf field <code>uint32 chat_delete_message_for_both_period = 5;</code>
     */
    private $chat_delete_message_for_both_period = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\Response $response
     *     @type bool $deprecated_client
     *     @type string $secondary_node_name
     *     @type bool $update_available
     *     @type int $chat_delete_message_for_both_period
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\UserLogin::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     * @return \Proto\Response
     */
    public function getResponse()
    {
        return $this->response;
    }

    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     * @param \Proto\Response $var
     * @return $this
     */
    public function setResponse($var)
    {
        GPBUtil::checkMessage($var, \Proto\Response::class);
        $this->response = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool deprecated_client = 2;</code>
     * @return bool
     */
    public function getDeprecatedClient()
    {
        return $this->deprecated_client;
    }

    /**
     * Generated from protobuf field <code>bool deprecated_client = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setDeprecatedClient($var)
    {
        GPBUtil::checkBool($var);
        $this->deprecated_client = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string secondary_node_name = 3;</code>
     * @return string
     */
    public function getSecondaryNodeName()
    {
        return $this->secondary_node_name;
    }

    /**
     * Generated from protobuf field <code>string secondary_node_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSecondaryNodeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->secondary_node_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool update_available = 4;</code>
     * @return bool
     */
    public function getUpdateAvailable()
    {
        return $this->update_available;
    }

    /**
     * Generated from protobuf field <code>bool update_available = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setUpdateAvailable($var)
    {
        GPBUtil::checkBool($var);
        $this->update_available = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 chat_delete_message_for_both_period = 5;</code>
     * @return int
     */
    public function getChatDeleteMessageForBothPeriod()
    {
        return $this->chat_delete_message_for_both_period;
    }

    /**
     * Generated from protobuf field <code>uint32 chat_delete_message_for_both_period = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setChatDeleteMessageForBothPeriod($var)
    {
        GPBUtil::checkUint32($var);
        $this->chat_delete_message_for_both_period = $var;

        return $this;
    }

}

