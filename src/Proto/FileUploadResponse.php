<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: FileUpload.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.FileUploadResponse</code>
 */
class FileUploadResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     */
    private $response = null;
    /**
     * Generated from protobuf field <code>double progress = 2;</code>
     */
    private $progress = 0.0;
    /**
     * Generated from protobuf field <code>int64 next_offset = 3;</code>
     */
    private $next_offset = 0;
    /**
     * Generated from protobuf field <code>int32 next_limit = 4;</code>
     */
    private $next_limit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\Response $response
     *     @type float $progress
     *     @type int|string $next_offset
     *     @type int $next_limit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\FileUpload::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     * @return \Proto\Response
     */
    public function getResponse()
    {
        return $this->response;
    }

    /**
     * Generated from protobuf field <code>.proto.Response response = 1;</code>
     * @param \Proto\Response $var
     * @return $this
     */
    public function setResponse($var)
    {
        GPBUtil::checkMessage($var, \Proto\Response::class);
        $this->response = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double progress = 2;</code>
     * @return float
     */
    public function getProgress()
    {
        return $this->progress;
    }

    /**
     * Generated from protobuf field <code>double progress = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkDouble($var);
        $this->progress = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 next_offset = 3;</code>
     * @return int|string
     */
    public function getNextOffset()
    {
        return $this->next_offset;
    }

    /**
     * Generated from protobuf field <code>int64 next_offset = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNextOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->next_offset = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 next_limit = 4;</code>
     * @return int
     */
    public function getNextLimit()
    {
        return $this->next_limit;
    }

    /**
     * Generated from protobuf field <code>int32 next_limit = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setNextLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->next_limit = $var;

        return $this;
    }

}

